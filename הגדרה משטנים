#define GreenLed 1
#define YellowLed 2
#define BlueLed 3
#define RedLed 4

#define GButton 5
#define YButton 6
#define BButton 7
#define RButton 8

#define SoundPin 5

#define AllLeds 4
#define CHOSEN_LEDS 3

int ledPins[AllLeds] = {GreenLed, YellowLed, BlueLed, RedLed};
int chosenLedIndices[CHOSEN_LEDS];
int buttonPins[AllLeds] = {GButton, YButton, BButton, RButton};
int buttonStates[AllLeds];
int previousButtonStates[AllLeds];
unsigned long lastButtonPressTime[AllLeds];
int pressedButtonIndices[AllLeds];
int pressedButtonCount = 0;
unsigned long gameStartTime;
unsigned long firstButtonPressTime;
bool isGameStarted = false;
bool isGameEnded = false;

#define VICTORY_TONE 1000
#define FAILURE_TONE 500

void setup() {
  initializePins();
  randomSeed(analogRead(A1));
}

void loop() {
  manageGameState();
}

void initializePins() {
  for (int i = 0; i < AllLeds; i++) {
    pinMode(ledPins[i], OUTPUT);
    pinMode(buttonPins[i], INPUT_PULLUP);
    previousButtonStates[i] = digitalRead(buttonPins[i]);
    lastButtonPressTime[i] = millis();
  }
  pinMode(SoundPin, OUTPUT);
}

void manageGameState() {
  if (isGameEnded) {
    checkForNewGameStart();
  } else if (!isGameStarted) {
    startNewGame();
  } else {
    playGame();
  }
}

void startNewGame() {
  resetGame();
  pickRandomLeds();
  signalStart();
}

void resetGame() {
  pressedButtonCount = 0;
  gameStartTime = millis();
  isGameStarted = true;
  isGameEnded = false;
  turnOffAllLeds();
}

void pickRandomLeds() {
  bool alreadyChosen[AllLeds] = {false, false, false, false};
  for (int i = 0; i < CHOSEN_LEDS; i++) {
    int index;
    do {
      index = random(AllLeds);
    } while (alreadyChosen[index]);
    alreadyChosen[index] = true;
    chosenLedIndices[i] = index;
    digitalWrite(ledPins[index], HIGH);
    delay(1000);
    digitalWrite(ledPins[index], LOW);
    delay(100);
  }
  delay(500); 
}
void signalStart() {
  tone(SoundPin, VICTORY_TONE, 100);
  delay(150);
}

void playGame() {
  int pressedButton = getPressedButton();
  if (pressedButton > -1) {
    if (pressedButtonCount == 0) {
      firstButtonPressTime = millis();
    }
    handleButtonPress(pressedButton);
  }
  evaluateGameState();
}

void checkForNewGameStart() {
  int pressedButton = getPressedButton();
  if (pressedButton > -1) {
    startNewGame();
  }
}
